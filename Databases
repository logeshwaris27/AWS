There are different ways to run your databases on AWS:

Using Amazon EC2
Using a managed purpose-built database service
With a managed database service, you can simplify the configuration and setup of your databases
Managed databases would take care of time-consuming and complex activities

Database usecases:
Moving to managed databases
Building modern apps with purpose-built databases
Breaking free from legacy databases

Relational databases: 

Traditional applications, enterprise resource planning (ERP), customer relationship management (CRM), e-commerce

Amazon Aurora
Amazon RDS
Amazon Redshift

Key-value type database :
High-traffic web applications, e-commerce systems, gaming applications

Dynamo-DB

In-memory type database:

Caching, session management, gaming leaderboards, geospatial applications

Amazon ElastiCache,
Amazon MemoryDB for Redis

Document type databases:

Content management, catalogs, user profiles

Amazon DocumentDB (with MongoDB compatibility)

Wide column type databases:

High-scale industrial apps for equipment maintenance, fleet management, route optimization
Amazon Keyspaces

Graph type databases:

Fraud detection, social networking, recommendation engines
Amazon Neptune

Time series type databases:

Internet of Things (IoT) applications, DevOps, industrial telemetry
Amazon Timestream

Ledger type databases:

Systems of record, supply chain, registrations, banking transactions
Amazon Ledger Database Services (QLDB)



Amazon Aurora

It is compatible with MySQL, so you can run those engines with increased performance on AWS.
The database supports High availability and durability, and you can run it serverless. This takes care of automatically scaling the resources for you.
With Aurora, you also can run the database with multi-Regional replicas.
Performance and availability of commercial-grade databases at 1/10th the cost.

